name: chocolatine

on:
  push:
    branches-ignore: [ga-ignore-*]
  pull_request:
    branches-ignore: [ga-ignore-*]

env:
  MIRROR_URL: 'https://github.com/EpitechPromo2028/B-DOP-200-BDX-2-1-chocolatine-jade.musseau.git'
  EXECUTABLES: 'swapupcase'

jobs:

  check_coding_style:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/epitech/coding-style-checker:latest

    steps:

      - name: Checkout GH repo
        uses: actions/checkout@master

      - name: Run coding-style checker
        run: check.sh $(pwd) $(pwd)

      - name: Report Banana result
        run: |
          NB_ERROR=$(cat coding-style-reports.log | wc -l)
          if [ $NB_ERROR -gt 0 ]; then
            ERROR=$(cat coding-style-reports.log)
            echo"::error title=$NB_ERROR errors found::$ERROR"
            exit 1
          fi
          exit 0

  check_program_compilation:

    runs-on: ubuntu-latest
    timeout-minutes: 2
    container: epitechcontent/epitest-docker:latest
    needs: [check_coding_style]
    steps:
      - name: Checkout GH repo
        uses: actions/checkout@master

      - name: Compile repository
        run: make

      - name: run clean
        run: make clean

      - name: Check binary presence
        run: |
          if [! -f ./${{ env.EXECUTABLES }}]; then
            echo "::error file=swapupcase, title=Binary
            Error::Binary not found"
            exit 1
          fi
          exit 0
  
  run_tests:
    runs-on: ubuntu-latest
    name: run_tests
    container: epitechcontent/epitest-docker:latest
    needs: [check_program_compilation, check_coding_style]

    steps:

      - name: Checkout GH repo
        uses: actions/checkout@master

      - name: Compile tests binaries
        run: make tests

      - name: Run unit tests
        run: ./unit_testing
  
  push_to_mirror:
    runs-on: ubuntu-latest
    name: push_to_mirror
    needs: [check_program_compilation, check_coding_style, run_tests]
    if: github.event_name == 'push'

    steps:
      - name: Checkout GH repo
        uses: actions/checkout@master
        
      - name: push to mirror
        uses: pixta-dev/repository-mirroring-action@v1.1.1
        with: 
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.SSH_PRIVATE_KEY}}